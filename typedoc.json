{
	"id": 0,
	"name": "setprotocol.js",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 583,
			"name": "\"SetProtocol\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/src/SetProtocol.ts",
			"children": [
				{
					"id": 589,
					"name": "SetProtocol",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "title",
								"text": "SetProtocol"
							},
							{
								"tag": "author",
								"text": "Set Protocol\n\nThe SetProtocol class that exposes all functionality for interacting with the SetProtocol smart contracts.\nMethods that require interaction with the Ethereum blockchain are exposed after instantiating a new instance\nof SetProtocol with the web3 provider argument\n"
							}
						]
					},
					"children": [
						{
							"id": 601,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Instantiates a new SetProtocol instance that provides the public interface to the SetProtocol.js library"
							},
							"signatures": [
								{
									"id": 602,
									"name": "new SetProtocol",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "Instantiates a new SetProtocol instance that provides the public interface to the SetProtocol.js library"
									},
									"parameters": [
										{
											"id": 603,
											"name": "provider",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "Provider instance you would like the SetProtocol.js library\n                     to use for interacting with the Ethereum network."
											},
											"type": {
												"type": "reference",
												"name": "Provider",
												"id": 65
											},
											"defaultValue": " undefined"
										},
										{
											"id": 604,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "Configuration object conforming to SetProtocolConfig with Set Protocol's contract addresses\n"
											},
											"type": {
												"type": "reference",
												"name": "SetProtocolConfig",
												"id": 584
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "SetProtocol",
										"id": 589
									}
								}
							],
							"sources": [
								{
									"fileName": "SetProtocol.ts",
									"line": 71,
									"character": 31
								}
							]
						},
						{
							"id": 593,
							"name": "accounting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "SetProtocol.ts",
									"line": 47,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "AccountingAPI",
								"id": 303
							}
						},
						{
							"id": 596,
							"name": "blockchain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "SetProtocol.ts",
									"line": 50,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "BlockchainAPI",
								"id": 332
							}
						},
						{
							"id": 591,
							"name": "core",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "SetProtocol.ts",
									"line": 45,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "CoreWrapper",
								"id": 128
							}
						},
						{
							"id": 599,
							"name": "erc20",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"comment": {
								"shortText": "An instance of the ERC20API class containing methods for interacting with ERC20 compliant token contracts"
							},
							"sources": [
								{
									"fileName": "SetProtocol.ts",
									"line": 66,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "ERC20API",
								"id": 351
							}
						},
						{
							"id": 594,
							"name": "factory",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "SetProtocol.ts",
									"line": 48,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "FactoryAPI",
								"id": 421
							}
						},
						{
							"id": 595,
							"name": "issuance",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "SetProtocol.ts",
									"line": 49,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "IssuanceAPI",
								"id": 452
							}
						},
						{
							"id": 598,
							"name": "orders",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"comment": {
								"shortText": "An instance of the OrderAPI class containing methods for relaying issuance orders"
							},
							"sources": [
								{
									"fileName": "SetProtocol.ts",
									"line": 61,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "OrderAPI",
								"id": 485
							}
						},
						{
							"id": 600,
							"name": "setToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"comment": {
								"shortText": "An instance of the SetTokenAPI class containing methods for interacting with SetToken contracts"
							},
							"sources": [
								{
									"fileName": "SetProtocol.ts",
									"line": 71,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "SetTokenAPI",
								"id": 555
							}
						},
						{
							"id": 592,
							"name": "vault",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "SetProtocol.ts",
									"line": 46,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "VaultWrapper",
								"id": 288
							}
						},
						{
							"id": 590,
							"name": "web3",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "SetProtocol.ts",
									"line": 44,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3"
							}
						},
						{
							"id": 597,
							"name": "NULL_ADDRESS",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"comment": {
								"shortText": "When creating an issuance order without a relayer token for a fee, you must use Solidity\naddress null type (as opposed to Javascripts `null`, `undefined` or empty string)."
							},
							"sources": [
								{
									"fileName": "SetProtocol.ts",
									"line": 56,
									"character": 28
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"defaultValue": " SetProtocolUtils.CONSTANTS.NULL_ADDRESS"
						},
						{
							"id": 659,
							"name": "awaitTransactionMinedAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 660,
									"name": "awaitTransactionMinedAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Polls the Ethereum blockchain until the specified transaction has been mined or\nthe timeout limit is reached, whichever occurs first",
										"returns": "Transaction receipt resulting from the mining process\n"
									},
									"parameters": [
										{
											"id": 661,
											"name": "txHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Transaction hash to poll"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 662,
											"name": "pollingIntervalMs",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Interval at which the blockchain should be polled"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 663,
											"name": "timeoutMs",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Number of milliseconds until this process times out. If\n                               no value is provided, a default value is used"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "TransactionReceipt"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "SetProtocol.ts",
									"line": 287,
									"character": 41
								}
							]
						},
						{
							"id": 605,
							"name": "createSetAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 606,
									"name": "createSetAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a new Set by passing in parameters denoting component token addresses, quantities, natural\nunit, and ERC20 properties",
										"text": "Note: the return value is the transaction hash of the createSetAsync call, not the deployed SetToken\ncontract address. Use `getSetAddressFromCreateTxHashAsync` to retrieve the SetToken address\n",
										"returns": "Transaction hash\n"
									},
									"parameters": [
										{
											"id": 607,
											"name": "components",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Component ERC20 token addresses"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										},
										{
											"id": 608,
											"name": "units",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Units of each component in Set paired in index order"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "BigNumber"
												}
											}
										},
										{
											"id": 609,
											"name": "naturalUnit",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Lowest common denominator for the Set"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 610,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name for Set, i.e. \"DEX Set\""
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 611,
											"name": "symbol",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Symbol for Set, i.e. \"DEX\""
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 612,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Transaction options object conforming to TxData with signer, gas, and gasPrice data"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 41
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "SetProtocol.ts",
									"line": 109,
									"character": 29
								}
							]
						},
						{
							"id": 625,
							"name": "depositAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 626,
									"name": "depositAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Deposits tokens into the vault under the signer's address that can be used to issue a Set",
										"returns": "Transaction hash\n"
									},
									"parameters": [
										{
											"id": 627,
											"name": "tokenAddresses",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Addresses of ERC20 tokens to deposit into the vault"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										},
										{
											"id": 628,
											"name": "quantities",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Amount of each token to deposit into the vault in index order with `tokenAddresses`"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "BigNumber"
												}
											}
										},
										{
											"id": 629,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Transaction options object conforming to TxData with signer, gas, and gasPrice data"
											},
											"type": {
												"type": "reference",
												"name": "TxDataWithFrom",
												"id": 46
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "SetProtocol.ts",
									"line": 164,
									"character": 27
								}
							]
						},
						{
							"id": 644,
							"name": "getBalanceInVaultAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 645,
									"name": "getBalanceInVaultAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetch the balance of the provided token contract address inside the Vault",
										"returns": "Balance of the contract in the vault\n"
									},
									"parameters": [
										{
											"id": 646,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the token contract (typically SetToken or ERC20)"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 647,
											"name": "ownerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the token owner"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BigNumber"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "SetProtocol.ts",
									"line": 233,
									"character": 37
								}
							]
						},
						{
							"id": 648,
							"name": "getSetAddressFromCreateTxHashAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 649,
									"name": "getSetAddressFromCreateTxHashAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetch a Set Token address from a createSetAsync transaction hash",
										"returns": "Address of the newly created Set\n"
									},
									"parameters": [
										{
											"id": 650,
											"name": "txHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Transaction hash of the createSetAsync transaction"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Address"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "SetProtocol.ts",
									"line": 243,
									"character": 49
								}
							]
						},
						{
							"id": 651,
							"name": "getSetAddressesAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 652,
									"name": "getSetAddressesAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetch the addresses of all SetTokens and RebalancingSetTokens",
										"returns": "Array of SetToken and RebalancingSetToken addresses\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "SetProtocol.ts",
									"line": 252,
									"character": 35
								}
							]
						},
						{
							"id": 653,
							"name": "isValidFactoryAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 654,
									"name": "isValidFactoryAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Verifies that the provided factory address is enabled for creating new Sets",
										"returns": "Whether the factory contract is enabled\n"
									},
									"parameters": [
										{
											"id": 655,
											"name": "factoryAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the factory contract"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "SetProtocol.ts",
									"line": 262,
									"character": 34
								}
							]
						},
						{
							"id": 656,
							"name": "isValidSetAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 657,
									"name": "isValidSetAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Verifies that the provided SetToken or RebalancingSetToken address is enabled\nfor issuance and redemption",
										"returns": "Whether the contract is enabled for transacting\n"
									},
									"parameters": [
										{
											"id": 658,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the SetToken or RebalancingSetToken contract"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "SetProtocol.ts",
									"line": 273,
									"character": 30
								}
							]
						},
						{
							"id": 613,
							"name": "issueAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 614,
									"name": "issueAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Issues a Set to the transaction signer. Must have component tokens in the correct quantites in either\nthe vault or in the signer's wallet. Component tokens must be approved to the Transfer\nProxy contract via setTransferProxyAllowanceAsync",
										"returns": "Transaction hash\n"
									},
									"parameters": [
										{
											"id": 615,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address Set to issue"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 616,
											"name": "quantity",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Amount of Set to issue. Must be multiple of the natural unit of the Set"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 617,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Transaction options object conforming to TxData with signer, gas, and gasPrice data"
											},
											"type": {
												"type": "reference",
												"name": "TxDataWithFrom",
												"id": 46
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "SetProtocol.ts",
									"line": 130,
									"character": 25
								}
							]
						},
						{
							"id": 618,
							"name": "redeemAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 619,
									"name": "redeemAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Redeems a Set to the transaction signer, returning the component tokens to the signer's wallet. Use `false` for\n`withdraw` to leave redeemed components in vault under the user's address to save gas if rebundling into another\nSet with similar components",
										"returns": "Transaction hash\n"
									},
									"parameters": [
										{
											"id": 620,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of Set to issue"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 621,
											"name": "quantity",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Amount of Set to redeem. Must be multiple of the natural unit of the Set"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 622,
											"name": "withdraw",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Boolean to withdraw back to signer's wallet or leave in vault. Defaults to true"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "true"
										},
										{
											"id": 623,
											"name": "tokensToExclude",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Token addresses to exclude from withdrawal"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										},
										{
											"id": 624,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Transaction options object conforming to TxData with signer, gas, and gasPrice data"
											},
											"type": {
												"type": "reference",
												"name": "TxDataWithFrom",
												"id": 46
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "SetProtocol.ts",
									"line": 146,
									"character": 26
								}
							]
						},
						{
							"id": 635,
							"name": "setTransferProxyAllowanceAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 636,
									"name": "setTransferProxyAllowanceAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the TransferProxy contract's allowance to a specified quantity on behalf of the signer. Allowance is\nrequired for issuing, redeeming, and filling issuance orders",
										"returns": "Transaction hash\n"
									},
									"parameters": [
										{
											"id": 637,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of token contract to approve (typically SetToken or ERC20)"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 638,
											"name": "quantity",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Allowance quantity"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 639,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Transaction options object conforming to TxData with signer, gas, and gasPrice data"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 41
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "SetProtocol.ts",
									"line": 197,
									"character": 45
								}
							]
						},
						{
							"id": 640,
							"name": "setUnlimitedTransferProxyAllowanceAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 641,
									"name": "setUnlimitedTransferProxyAllowanceAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the TransferProxy contract's allowance to the maximum amount on behalf of the signer. Allowance is\nrequired for issuing, redeeming, and filling issuance orders",
										"returns": "Transaction hash\n"
									},
									"parameters": [
										{
											"id": 642,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of contract to approve (typically SetToken or ERC20)"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 643,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Transaction options object conforming to TxData with signer, gas, and gasPrice data"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 41
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "SetProtocol.ts",
									"line": 218,
									"character": 54
								}
							]
						},
						{
							"id": 630,
							"name": "withdrawAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 631,
									"name": "withdrawAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Withdraws tokens from the vault belonging to the signer",
										"returns": "Transaction hash\n"
									},
									"parameters": [
										{
											"id": 632,
											"name": "tokenAddresses",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Addresses of ERC20 tokens to withdraw from the vault"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										},
										{
											"id": 633,
											"name": "quantities",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Amount of each token token to withdraw from vault in index order with `tokenAddresses`"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "BigNumber"
												}
											}
										},
										{
											"id": 634,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Transaction options object conforming to TxData with signer, gas, and gasPrice data"
											},
											"type": {
												"type": "reference",
												"name": "TxDataWithFrom",
												"id": 46
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "SetProtocol.ts",
									"line": 180,
									"character": 28
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								601
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								593,
								596,
								591,
								599,
								594,
								595,
								598,
								600,
								592,
								590,
								597
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								659,
								605,
								625,
								644,
								648,
								651,
								653,
								656,
								613,
								618,
								635,
								640,
								630
							]
						}
					],
					"sources": [
						{
							"fileName": "SetProtocol.ts",
							"line": 43,
							"character": 17
						}
					]
				},
				{
					"id": 584,
					"name": "SetProtocolConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 585,
							"name": "coreAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "SetProtocol.ts",
									"line": 29,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Address"
							}
						},
						{
							"id": 588,
							"name": "setTokenFactoryAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "SetProtocol.ts",
									"line": 32,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"name": "Address"
							}
						},
						{
							"id": 586,
							"name": "transferProxyAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "SetProtocol.ts",
									"line": 30,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"name": "Address"
							}
						},
						{
							"id": 587,
							"name": "vaultAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "SetProtocol.ts",
									"line": 31,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "Address"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								585,
								588,
								586,
								587
							]
						}
					],
					"sources": [
						{
							"fileName": "SetProtocol.ts",
							"line": 28,
							"character": 34
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						589
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						584
					]
				}
			],
			"sources": [
				{
					"fileName": "SetProtocol.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 302,
			"name": "\"api/AccountingAPI\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/src/api/AccountingAPI.ts",
			"children": [
				{
					"id": 303,
					"name": "AccountingAPI",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "title",
								"text": "AccountingAPI"
							},
							{
								"tag": "author",
								"text": "Set Protocol\n\nA library for managing ERC20 token and Set balances for users throughout the SetProtocol system\n"
							}
						]
					},
					"children": [
						{
							"id": 307,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Instantiates a new AccountingAPI instance that contains methods for transferring balances in the vault"
							},
							"signatures": [
								{
									"id": 308,
									"name": "new AccountingAPI",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "Instantiates a new AccountingAPI instance that contains methods for transferring balances in the vault"
									},
									"parameters": [
										{
											"id": 309,
											"name": "web3",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "Web3.js Provider instance you would like the SetProtocol.js library\n                 to use for interacting with the Ethereum network"
											},
											"type": {
												"type": "reference",
												"name": "Web3"
											},
											"defaultValue": " undefined"
										},
										{
											"id": 310,
											"name": "core",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "Address of the Set Core contract\n"
											},
											"type": {
												"type": "reference",
												"name": "CoreWrapper",
												"id": 128
											},
											"defaultValue": " undefined"
										}
									],
									"type": {
										"type": "reference",
										"name": "AccountingAPI",
										"id": 303
									}
								}
							],
							"sources": [
								{
									"fileName": "api/AccountingAPI.ts",
									"line": 38,
									"character": 28
								}
							]
						},
						{
							"id": 305,
							"name": "assert",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "api/AccountingAPI.ts",
									"line": 37,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "Assertions"
							}
						},
						{
							"id": 306,
							"name": "core",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "api/AccountingAPI.ts",
									"line": 38,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "CoreWrapper",
								"id": 128
							}
						},
						{
							"id": 304,
							"name": "web3",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "api/AccountingAPI.ts",
									"line": 36,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3"
							}
						},
						{
							"id": 321,
							"name": "assertDeposit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 322,
									"name": "assertDeposit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 323,
											"name": "transactionCaller",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 324,
											"name": "tokenAddresses",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										},
										{
											"id": 325,
											"name": "quantities",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "BigNumber"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/AccountingAPI.ts",
									"line": 101,
									"character": 29
								}
							]
						},
						{
							"id": 326,
							"name": "assertWithdraw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 327,
									"name": "assertWithdraw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 328,
											"name": "transactionCaller",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 329,
											"name": "tokenAddresses",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										},
										{
											"id": 330,
											"name": "quantities",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "BigNumber"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/AccountingAPI.ts",
									"line": 143,
									"character": 30
								}
							]
						},
						{
							"id": 311,
							"name": "depositAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 312,
									"name": "depositAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Deposits tokens into the vault under the signer's address that can be used to issue a Set. Uses a different\ntransaction method depending on number of tokens to deposit in order to save gas",
										"returns": "Transaction hash\n"
									},
									"parameters": [
										{
											"id": 313,
											"name": "tokenAddresses",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Addresses of ERC20 tokens to deposit into the vault"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										},
										{
											"id": 314,
											"name": "quantities",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Amount of each token to deposit into the vault in index order with `tokenAddresses`"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "BigNumber"
												}
											}
										},
										{
											"id": 315,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Transaction options object conforming to TxData with signer, gas, and gasPrice data"
											},
											"type": {
												"type": "reference",
												"name": "TxDataWithFrom",
												"id": 46
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/AccountingAPI.ts",
									"line": 62,
									"character": 27
								}
							]
						},
						{
							"id": 316,
							"name": "withdrawAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 317,
									"name": "withdrawAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Withdraws tokens from the vault belonging to the signer. Uses a different transaction method depending on\nnumber of tokens to withdraw in order to save gas",
										"returns": "Transaction hash\n"
									},
									"parameters": [
										{
											"id": 318,
											"name": "tokenAddresses",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Addresses of ERC20 tokens to withdraw from the vault"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										},
										{
											"id": 319,
											"name": "quantities",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Amount of each token token to withdraw from vault in index order with `tokenAddresses`"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "BigNumber"
												}
											}
										},
										{
											"id": 320,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Transaction options object conforming to TxData with signer, gas, and gasPrice data"
											},
											"type": {
												"type": "reference",
												"name": "TxDataWithFrom",
												"id": 46
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/AccountingAPI.ts",
									"line": 85,
									"character": 28
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								307
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								305,
								306,
								304
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								321,
								326,
								311,
								316
							]
						}
					],
					"sources": [
						{
							"fileName": "api/AccountingAPI.ts",
							"line": 35,
							"character": 26
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						303
					]
				}
			],
			"sources": [
				{
					"fileName": "api/AccountingAPI.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 331,
			"name": "\"api/BlockchainAPI\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/src/api/BlockchainAPI.ts",
			"children": [
				{
					"id": 332,
					"name": "BlockchainAPI",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "title",
								"text": "BlockchainAPI"
							},
							{
								"tag": "author",
								"text": "Set Protocol\n\nA utility library for managing blockchain operations\n"
							}
						]
					},
					"children": [
						{
							"id": 337,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Instantiates a new BlockchainAPI instance that contains methods for miscellaneous blockchain functionality"
							},
							"signatures": [
								{
									"id": 338,
									"name": "new BlockchainAPI",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "Instantiates a new BlockchainAPI instance that contains methods for miscellaneous blockchain functionality"
									},
									"parameters": [
										{
											"id": 339,
											"name": "web3",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "Web3.js Provider instance you would like the SetProtocol.js library\n                 to use for interacting with the Ethereum network.\n"
											},
											"type": {
												"type": "reference",
												"name": "Web3"
											},
											"defaultValue": " undefined"
										}
									],
									"type": {
										"type": "reference",
										"name": "BlockchainAPI",
										"id": 332
									}
								}
							],
							"sources": [
								{
									"fileName": "api/BlockchainAPI.ts",
									"line": 54,
									"character": 31
								}
							]
						},
						{
							"id": 334,
							"name": "assert",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "api/BlockchainAPI.ts",
									"line": 52,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "Assertions"
							}
						},
						{
							"id": 335,
							"name": "intervalManager",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "api/BlockchainAPI.ts",
									"line": 53,
									"character": 25
								}
							],
							"type": {
								"type": "reference",
								"name": "IntervalManager"
							}
						},
						{
							"id": 333,
							"name": "web3",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "api/BlockchainAPI.ts",
									"line": 51,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3"
							}
						},
						{
							"id": 336,
							"name": "web3Utils",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "api/BlockchainAPI.ts",
									"line": 54,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3Utils"
							}
						},
						{
							"id": 340,
							"name": "awaitTransactionMinedAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 341,
									"name": "awaitTransactionMinedAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Polls the Ethereum blockchain until the specified transaction has been mined or\nthe timeout limit is reached, whichever occurs first",
										"returns": "Transaction receipt resulting from the mining process\n"
									},
									"parameters": [
										{
											"id": 342,
											"name": "txHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Transaction hash to poll"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 343,
											"name": "pollingIntervalMs",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Interval at which the blockchain should be polled. Defaults to 1000"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1000"
										},
										{
											"id": 344,
											"name": "timeoutMs",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Number of milliseconds until this process times out. Defaults\n                               to DEFAULT_TIMEOUT_FOR_TX_MINED"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": " DEFAULT_TIMEOUT_FOR_TX_MINED"
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "TransactionReceipt"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/BlockchainAPI.ts",
									"line": 80,
									"character": 41
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								337
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								334,
								335,
								333,
								336
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								340
							]
						}
					],
					"sources": [
						{
							"fileName": "api/BlockchainAPI.ts",
							"line": 50,
							"character": 26
						}
					]
				},
				{
					"id": 349,
					"name": "DEFAULT_TIMEOUT_FOR_TX_MINED",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "The following default timeout is provided to the IntervalManager when awaiting mined\ntransactions. The value is represented in milliseconds.",
						"tags": [
							{
								"tag": "type",
								"text": "{number}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "api/BlockchainAPI.ts",
							"line": 42,
							"character": 41
						}
					],
					"type": {
						"type": "unknown",
						"name": "60000"
					},
					"defaultValue": "60000"
				},
				{
					"id": 345,
					"name": "BlockchainAPIErrors",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"children": [
						{
							"id": 346,
							"name": "AWAIT_MINE_TX_TIMED_OUT",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 347,
									"name": "AWAIT_MINE_TX_TIMED_OUT",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 348,
											"name": "txHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "api/BlockchainAPI.ts",
									"line": 32,
									"character": 25
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								346
							]
						}
					],
					"sources": [
						{
							"fileName": "api/BlockchainAPI.ts",
							"line": 31,
							"character": 32
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						332
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						349
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						345
					]
				}
			],
			"sources": [
				{
					"fileName": "api/BlockchainAPI.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 350,
			"name": "\"api/ERC20API\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/src/api/ERC20API.ts",
			"children": [
				{
					"id": 351,
					"name": "ERC20API",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "title",
								"text": "ERC20API"
							},
							{
								"tag": "author",
								"text": "Set Protocol\n\nA library for interacting with ERC20 compliant token contracts\n"
							}
						]
					},
					"children": [
						{
							"id": 355,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Instantiates a new IssuanceAPI instance that contains methods for transferring balances in the vault"
							},
							"signatures": [
								{
									"id": 356,
									"name": "new ERC20API",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "Instantiates a new IssuanceAPI instance that contains methods for transferring balances in the vault"
									},
									"parameters": [
										{
											"id": 357,
											"name": "web3",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "Web3.js Provider instance you would like the SetProtocol.js library\n                 to use for interacting with the Ethereum network"
											},
											"type": {
												"type": "reference",
												"name": "Web3"
											},
											"defaultValue": " undefined"
										}
									],
									"type": {
										"type": "reference",
										"name": "ERC20API",
										"id": 351
									}
								}
							],
							"sources": [
								{
									"fileName": "api/ERC20API.ts",
									"line": 39,
									"character": 37
								}
							]
						},
						{
							"id": 353,
							"name": "assert",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "api/ERC20API.ts",
									"line": 38,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "Assertions"
							}
						},
						{
							"id": 354,
							"name": "erc20Wrapper",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "api/ERC20API.ts",
									"line": 39,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"name": "ERC20Wrapper",
								"id": 222
							}
						},
						{
							"id": 352,
							"name": "web3",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "api/ERC20API.ts",
									"line": 37,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3"
							}
						},
						{
							"id": 392,
							"name": "approveAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 393,
									"name": "approveAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Approves the specified amount of allowance to the spender on behalf of the signer",
										"returns": "The hash of the resulting transaction\n"
									},
									"parameters": [
										{
											"id": 394,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the token being used"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 395,
											"name": "spenderAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address to approve allowance to"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 396,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Amount of allowance to grant"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 397,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Transaction options object conforming to TxData with signer, gas, and gasPrice data"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 41
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/ERC20API.ts",
									"line": 187,
									"character": 27
								}
							]
						},
						{
							"id": 416,
							"name": "assertApprove",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 417,
									"name": "assertApprove",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 418,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 419,
											"name": "spenderAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "api/ERC20API.ts",
									"line": 222,
									"character": 23
								}
							]
						},
						{
							"id": 402,
							"name": "assertGetAllowance",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 403,
									"name": "assertGetAllowance",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 404,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 405,
											"name": "ownerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 406,
											"name": "spenderAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "api/ERC20API.ts",
									"line": 205,
									"character": 28
								}
							]
						},
						{
							"id": 398,
							"name": "assertGetBalanceOf",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 399,
									"name": "assertGetBalanceOf",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 400,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 401,
											"name": "userAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "api/ERC20API.ts",
									"line": 200,
									"character": 28
								}
							]
						},
						{
							"id": 407,
							"name": "assertTransfer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 408,
									"name": "assertTransfer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 409,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 410,
											"name": "to",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "api/ERC20API.ts",
									"line": 211,
									"character": 24
								}
							]
						},
						{
							"id": 411,
							"name": "assertTransferFrom",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 412,
									"name": "assertTransferFrom",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 413,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 414,
											"name": "from",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 415,
											"name": "to",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "api/ERC20API.ts",
									"line": 216,
									"character": 28
								}
							]
						},
						{
							"id": 374,
							"name": "getAllowanceAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 375,
									"name": "getAllowanceAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetches the allowance of the spender for the token by the owner",
										"returns": "Allowance of the spender\n"
									},
									"parameters": [
										{
											"id": 376,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the token"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 377,
											"name": "ownerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the owner"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 378,
											"name": "spenderAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the spender"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BigNumber"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/ERC20API.ts",
									"line": 124,
									"character": 32
								}
							]
						},
						{
							"id": 358,
							"name": "getBalanceOfAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 359,
									"name": "getBalanceOfAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetches the balance of the ERC20 token the user",
										"returns": "Balance of the ERC20 token\n"
									},
									"parameters": [
										{
											"id": 360,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the ERC20 token"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 361,
											"name": "userAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Wallet address of the user"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BigNumber"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/ERC20API.ts",
									"line": 62,
									"character": 32
								}
							]
						},
						{
							"id": 371,
							"name": "getDecimalsAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 372,
									"name": "getDecimalsAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetches the decimals of the ERC20 token",
										"returns": "Decimals of the ERC20 token\n"
									},
									"parameters": [
										{
											"id": 373,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the ERC20 token"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BigNumber"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/ERC20API.ts",
									"line": 110,
									"character": 31
								}
							]
						},
						{
							"id": 362,
							"name": "getNameAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 363,
									"name": "getNameAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetches the name of the ERC20 token",
										"returns": "Name of the ERC20 token\n"
									},
									"parameters": [
										{
											"id": 364,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the ERC20 token"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/ERC20API.ts",
									"line": 74,
									"character": 27
								}
							]
						},
						{
							"id": 365,
							"name": "getSymbolAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 366,
									"name": "getSymbolAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetches the symbol of the ERC20 token",
										"returns": "Symbol of the ERC20 token\n"
									},
									"parameters": [
										{
											"id": 367,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the ERC20 token"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/ERC20API.ts",
									"line": 86,
									"character": 29
								}
							]
						},
						{
							"id": 368,
							"name": "getTotalSupplyAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 369,
									"name": "getTotalSupplyAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetches the total supply of the ERC20 token",
										"returns": "Total supply of the ERC20 token\n"
									},
									"parameters": [
										{
											"id": 370,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the ERC20 token"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BigNumber"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/ERC20API.ts",
									"line": 98,
									"character": 34
								}
							]
						},
						{
							"id": 379,
							"name": "transferAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 380,
									"name": "transferAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Transfer balance denominated in the specified ERC20 token to another address",
										"returns": "Transaction hash\n"
									},
									"parameters": [
										{
											"id": 381,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the token to transfer"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 382,
											"name": "to",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the receiver"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 383,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Amount being transferred"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 384,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Transaction options object conforming to TxData with signer, gas, and gasPrice data"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 41
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/ERC20API.ts",
									"line": 143,
									"character": 28
								}
							]
						},
						{
							"id": 385,
							"name": "transferFromAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 386,
									"name": "transferFromAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Transfer balance denominated in the specified ERC20 token on behalf of the owner. Caller\nmust have sufficient allowance from owner in order to complete transfer. Use `approveAsync`\nto grant allowance",
										"returns": "Transaction hash\n"
									},
									"parameters": [
										{
											"id": 387,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the token to transfer"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 388,
											"name": "from",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Token owner"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 389,
											"name": "to",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the receiver"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 390,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Amount to be transferred"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 391,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Transaction options object conforming to TxData with signer, gas, and gasPrice data"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 41
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/ERC20API.ts",
									"line": 166,
									"character": 32
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								355
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								353,
								354,
								352
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								392,
								416,
								402,
								398,
								407,
								411,
								374,
								358,
								371,
								362,
								365,
								368,
								379,
								385
							]
						}
					],
					"sources": [
						{
							"fileName": "api/ERC20API.ts",
							"line": 36,
							"character": 21
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						351
					]
				}
			],
			"sources": [
				{
					"fileName": "api/ERC20API.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 420,
			"name": "\"api/FactoryAPI\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/src/api/FactoryAPI.ts",
			"children": [
				{
					"id": 421,
					"name": "FactoryAPI",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "title",
								"text": "FactoryAPI"
							},
							{
								"tag": "author",
								"text": "Set Protocol\n\nA library for deploying new Set contracts\n"
							}
						]
					},
					"children": [
						{
							"id": 426,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Instantiates a new FactoryAPI instance that contains methods for creating new Sets"
							},
							"signatures": [
								{
									"id": 427,
									"name": "new FactoryAPI",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "Instantiates a new FactoryAPI instance that contains methods for creating new Sets"
									},
									"parameters": [
										{
											"id": 428,
											"name": "web3",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "Web3.js Provider instance you would like the SetProtocol.js library\n                                   to use for interacting with the Ethereum network."
											},
											"type": {
												"type": "reference",
												"name": "Web3"
											},
											"defaultValue": " undefined"
										},
										{
											"id": 429,
											"name": "core",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "An instance of CoreWrapper to interact with the deployed Core contract"
											},
											"type": {
												"type": "reference",
												"name": "CoreWrapper",
												"id": 128
											},
											"defaultValue": " undefined"
										},
										{
											"id": 430,
											"name": "setTokenFactoryAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "Address of the SetTokenFactory associated with the deployed Core contract\n"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "FactoryAPI",
										"id": 421
									}
								}
							],
							"sources": [
								{
									"fileName": "api/FactoryAPI.ts",
									"line": 41,
									"character": 42
								}
							]
						},
						{
							"id": 423,
							"name": "assert",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "api/FactoryAPI.ts",
									"line": 39,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "Assertions"
							}
						},
						{
							"id": 424,
							"name": "core",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "api/FactoryAPI.ts",
									"line": 40,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "CoreWrapper",
								"id": 128
							}
						},
						{
							"id": 425,
							"name": "setTokenFactoryAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "api/FactoryAPI.ts",
									"line": 41,
									"character": 32
								}
							],
							"type": {
								"type": "reference",
								"name": "Address"
							}
						},
						{
							"id": 422,
							"name": "web3",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "api/FactoryAPI.ts",
									"line": 38,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3"
							}
						},
						{
							"id": 442,
							"name": "assertCreateSet",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 443,
									"name": "assertCreateSet",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 444,
											"name": "userAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 445,
											"name": "factoryAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 446,
											"name": "components",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										},
										{
											"id": 447,
											"name": "units",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "BigNumber"
												}
											}
										},
										{
											"id": 448,
											"name": "naturalUnit",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 449,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 450,
											"name": "symbol",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/FactoryAPI.ts",
									"line": 110,
									"character": 31
								}
							]
						},
						{
							"id": 431,
							"name": "createSetAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 432,
									"name": "createSetAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a new Set by passing in parameters denoting component token addresses, quantities, natural\nunit, and ERC20 properties",
										"text": "Note: the return value is the transaction hash of the createSetAsync call, not the deployed SetToken\ncontract address. Use `getSetAddressFromCreateTxHashAsync` to retrieve the SetToken address\n",
										"returns": "Transaction hash\n"
									},
									"parameters": [
										{
											"id": 433,
											"name": "components",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Component ERC20 token addresses"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										},
										{
											"id": 434,
											"name": "units",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Units of each component in Set paired in index order"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "BigNumber"
												}
											}
										},
										{
											"id": 435,
											"name": "naturalUnit",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Lowest common denominator for the Set"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 436,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name for Set, i.e. \"DEX Set\""
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 437,
											"name": "symbol",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Symbol for Set, i.e. \"DEX\""
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 438,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Transaction options object conforming to TxData with signer, gas, and gasPrice data"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 41
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/FactoryAPI.ts",
									"line": 73,
									"character": 29
								}
							]
						},
						{
							"id": 439,
							"name": "getSetAddressFromCreateTxHash",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 440,
									"name": "getSetAddressFromCreateTxHash",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetch a Set Token address from a createSetAsync transaction hash",
										"returns": "Address of the newly created Set\n"
									},
									"parameters": [
										{
											"id": 441,
											"name": "txHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Transaction hash of the createSetAsync transaction"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Address"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/FactoryAPI.ts",
									"line": 101,
									"character": 44
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								426
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								423,
								424,
								425,
								422
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								442,
								431,
								439
							]
						}
					],
					"sources": [
						{
							"fileName": "api/FactoryAPI.ts",
							"line": 37,
							"character": 23
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						421
					]
				}
			],
			"sources": [
				{
					"fileName": "api/FactoryAPI.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 451,
			"name": "\"api/IssuanceAPI\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/src/api/IssuanceAPI.ts",
			"children": [
				{
					"id": 452,
					"name": "IssuanceAPI",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "title",
								"text": "IssuanceAPI"
							},
							{
								"tag": "author",
								"text": "Set Protocol\n\nA library for issuing and redeeming Sets\n"
							}
						]
					},
					"children": [
						{
							"id": 456,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Instantiates a new IssuanceAPI instance that contains methods for issuing and redeeming Sets"
							},
							"signatures": [
								{
									"id": 457,
									"name": "new IssuanceAPI",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "Instantiates a new IssuanceAPI instance that contains methods for issuing and redeeming Sets"
									},
									"parameters": [
										{
											"id": 458,
											"name": "web3",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The Web3.js Provider instance you would like the SetProtocol.js library\n                 to use for interacting with the Ethereum network."
											},
											"type": {
												"type": "reference",
												"name": "Web3"
											},
											"defaultValue": " undefined"
										},
										{
											"id": 459,
											"name": "core",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The address of the Set Core contract\n"
											},
											"type": {
												"type": "reference",
												"name": "CoreWrapper",
												"id": 128
											},
											"defaultValue": " undefined"
										}
									],
									"type": {
										"type": "reference",
										"name": "IssuanceAPI",
										"id": 452
									}
								}
							],
							"sources": [
								{
									"fileName": "api/IssuanceAPI.ts",
									"line": 40,
									"character": 28
								}
							]
						},
						{
							"id": 454,
							"name": "assert",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "api/IssuanceAPI.ts",
									"line": 39,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "Assertions"
							}
						},
						{
							"id": 455,
							"name": "core",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "api/IssuanceAPI.ts",
									"line": 40,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "CoreWrapper",
								"id": 128
							}
						},
						{
							"id": 453,
							"name": "web3",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "api/IssuanceAPI.ts",
									"line": 38,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3"
							}
						},
						{
							"id": 472,
							"name": "assertIssue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 473,
									"name": "assertIssue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 474,
											"name": "transactionCaller",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 475,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 476,
											"name": "quantity",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/IssuanceAPI.ts",
									"line": 111,
									"character": 27
								}
							]
						},
						{
							"id": 477,
							"name": "assertRedeem",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 478,
									"name": "assertRedeem",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 479,
											"name": "transactionCaller",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 480,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 481,
											"name": "quantity",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 482,
											"name": "withdraw",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 483,
											"name": "tokensToExclude",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/IssuanceAPI.ts",
									"line": 131,
									"character": 28
								}
							]
						},
						{
							"id": 460,
							"name": "issueAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 461,
									"name": "issueAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Issues a Set to the transaction signer. Must have component tokens in the correct quantites in either\nthe vault or in the signer's wallet. Component tokens must be approved to the Transfer\nProxy contract via setTransferProxyAllowanceAsync",
										"returns": "Transaction hash\n"
									},
									"parameters": [
										{
											"id": 462,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address Set to issue"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 463,
											"name": "quantity",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Amount of Set to issue. Must be multiple of the natural unit of the Set"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 464,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Transaction options object conforming to TxData with signer, gas, and gasPrice data"
											},
											"type": {
												"type": "reference",
												"name": "TxDataWithFrom",
												"id": 46
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/IssuanceAPI.ts",
									"line": 65,
									"character": 25
								}
							]
						},
						{
							"id": 465,
							"name": "redeemAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 466,
									"name": "redeemAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Redeems a Set to the transaction signer, returning the component tokens to the signer's wallet. Use `false` for\nto `withdraw` to leave redeemed components in vault under the user's address to save gas if rebundling into another\nSet with similar components",
										"returns": "Transaction hash\n"
									},
									"parameters": [
										{
											"id": 467,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of Set to issue"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 468,
											"name": "quantity",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Amount of Set to redeem. Must be multiple of the natural unit of the Set"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 469,
											"name": "withdraw",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Boolean to withdraw back to signer's wallet or leave in vault. Defaults to true"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 470,
											"name": "tokensToExclude",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Token addresses to exclude from withdrawal"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										},
										{
											"id": 471,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Transaction options object conforming to TxData with signer, gas, and gasPrice data"
											},
											"type": {
												"type": "reference",
												"name": "TxDataWithFrom",
												"id": 46
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/IssuanceAPI.ts",
									"line": 83,
									"character": 26
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								456
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								454,
								455,
								453
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								472,
								477,
								460,
								465
							]
						}
					],
					"sources": [
						{
							"fileName": "api/IssuanceAPI.ts",
							"line": 37,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						452
					]
				}
			],
			"sources": [
				{
					"fileName": "api/IssuanceAPI.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 484,
			"name": "\"api/OrderAPI\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/src/api/OrderAPI.ts",
			"children": [
				{
					"id": 485,
					"name": "OrderAPI",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "title",
								"text": "OrderAPI"
							},
							{
								"tag": "author",
								"text": "Set Protocol\n\nA library for handling issuance orders for Sets\n"
							}
						]
					},
					"children": [
						{
							"id": 490,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Instantiates a new OrderAPI instance that contains methods for creating, filling, and cancelling issuance orders"
							},
							"signatures": [
								{
									"id": 491,
									"name": "new OrderAPI",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "Instantiates a new OrderAPI instance that contains methods for creating, filling, and cancelling issuance orders"
									},
									"parameters": [
										{
											"id": 492,
											"name": "web3",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "Web3.js Provider instance you would like the SetProtocol.js library\n                 to use for interacting with the Ethereum network"
											},
											"type": {
												"type": "reference",
												"name": "Web3"
											},
											"defaultValue": " undefined"
										},
										{
											"id": 493,
											"name": "core",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "Address of the Set Core contract\n"
											},
											"type": {
												"type": "reference",
												"name": "CoreWrapper",
												"id": 128
											},
											"defaultValue": " undefined"
										}
									],
									"type": {
										"type": "reference",
										"name": "OrderAPI",
										"id": 485
									}
								}
							],
							"sources": [
								{
									"fileName": "api/OrderAPI.ts",
									"line": 55,
									"character": 44
								}
							]
						},
						{
							"id": 487,
							"name": "assert",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "api/OrderAPI.ts",
									"line": 53,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "Assertions"
							}
						},
						{
							"id": 488,
							"name": "core",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/OrderAPI.ts",
									"line": 54,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "CoreWrapper",
								"id": 128
							}
						},
						{
							"id": 489,
							"name": "setProtocolUtils",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/OrderAPI.ts",
									"line": 55,
									"character": 25
								}
							],
							"type": {
								"type": "reference",
								"name": "SetProtocolUtils"
							}
						},
						{
							"id": 486,
							"name": "web3",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "api/OrderAPI.ts",
									"line": 52,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3"
							}
						},
						{
							"id": 549,
							"name": "assertCancelOrder",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 550,
									"name": "assertCancelOrder",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 551,
											"name": "transactionCaller",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 552,
											"name": "issuanceOrder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IssuanceOrder"
											}
										},
										{
											"id": 553,
											"name": "quantityToCancel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/OrderAPI.ts",
									"line": 288,
									"character": 33
								}
							]
						},
						{
							"id": 543,
							"name": "assertFillOrder",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 544,
									"name": "assertFillOrder",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 545,
											"name": "transactionCaller",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 546,
											"name": "signedIssuanceOrder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SignedIssuanceOrder"
											}
										},
										{
											"id": 547,
											"name": "quantityToFill",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 548,
											"name": "orders",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"name": "ZeroExSignedFillOrder"
														},
														{
															"type": "reference",
															"name": "TakerWalletOrder"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/OrderAPI.ts",
									"line": 268,
									"character": 31
								}
							]
						},
						{
							"id": 532,
							"name": "cancelOrderAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 533,
									"name": "cancelOrderAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Cancels an issuance order on behalf of the maker. After successfully mining this transaction, a taker can only\nfill up to an issuance order's quantity minus the quantity",
										"returns": "Transaction hash\n"
									},
									"parameters": [
										{
											"id": 534,
											"name": "issuanceOrder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Object confomring to IssuanceOrder to cancel"
											},
											"type": {
												"type": "reference",
												"name": "IssuanceOrder"
											}
										},
										{
											"id": 535,
											"name": "quantity",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Amount of the issuance order's quantity to cancel"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 536,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Transaction options object conforming to TxData with signer, gas, and gasPrice data"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 41
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/OrderAPI.ts",
									"line": 232,
									"character": 31
								}
							]
						},
						{
							"id": 511,
							"name": "createSignedOrderAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 512,
									"name": "createSignedOrderAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a new issuance order with a valid signature denoting the user's intent to exchange some maker token for\na Set token. Suggest using a popular trading pair as the maker token such as WETH or Dai in order to take\nadvantage of external liquidity sources",
										"returns": "Object conforming to SignedIssuanceOrder with valid signature\n"
									},
									"parameters": [
										{
											"id": 513,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the Set token for issuance order"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 514,
											"name": "quantity",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Amount of the Set token to create as part of issuance order"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 515,
											"name": "requiredComponents",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Addresses of required component tokens of the Set"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										},
										{
											"id": 516,
											"name": "requiredComponentAmounts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Amounts of each required component needed"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "BigNumber"
												}
											}
										},
										{
											"id": 517,
											"name": "makerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of user making the issuance order"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 518,
											"name": "makerToken",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of token the issuance order maker is offering for the transaction"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 519,
											"name": "makerTokenAmount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Amount of tokens maker offers for aggergate order size"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 520,
											"name": "expiration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Unix timestamp of expiration in seconds"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 521,
											"name": "relayerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of relayer of order"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 522,
											"name": "relayerToken",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of token paid to relayer as a fee"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 523,
											"name": "makerRelayerFee",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Amount of relayer token paid to relayer by maker"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 524,
											"name": "takerRelayerFee",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Amount of relayer token paid to relayer by taker"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 525,
											"name": "salt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Optional salt to include in signing"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											},
											"defaultValue": " SetProtocolUtils.generateSalt()"
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SignedIssuanceOrder"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/OrderAPI.ts",
									"line": 156,
									"character": 37
								}
							]
						},
						{
							"id": 526,
							"name": "fillOrderAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 527,
									"name": "fillOrderAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fills an issuance order on behalf of the taker. The taker should specifiy the fill amount and the liquidity\nsources, either other exchange orders that can be exchanged using the specified maker token in the issuance order,\nor from the taker's own wallet",
										"returns": "Transaction hash\n"
									},
									"parameters": [
										{
											"id": 528,
											"name": "signedIssuanceOrder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Object confomring to SignedIssuanceOrder to fill"
											},
											"type": {
												"type": "reference",
												"name": "SignedIssuanceOrder"
											}
										},
										{
											"id": 529,
											"name": "quantity",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Amount of Set to fill in this call"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 530,
											"name": "orders",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Array of order objects conforming to either TakerWalletOrder or\n                                 ZeroExSignedFillOrder to fill issuance order"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"name": "ZeroExSignedFillOrder"
														},
														{
															"type": "reference",
															"name": "TakerWalletOrder"
														}
													]
												}
											}
										},
										{
											"id": 531,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Transaction options object conforming to TxData with signer, gas, and gasPrice data"
											},
											"type": {
												"type": "reference",
												"name": "TxDataWithFrom",
												"id": 46
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/OrderAPI.ts",
									"line": 206,
									"character": 29
								}
							]
						},
						{
							"id": 496,
							"name": "generateExpirationTimestamp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 497,
									"name": "generateExpirationTimestamp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Generates a timestamp represented as seconds since unix epoch. The timestamp is intended to be\nused to generate the expiration of an issuance order",
										"returns": "Unix timestamp (in seconds since unix epoch)\n"
									},
									"parameters": [
										{
											"id": 498,
											"name": "seconds",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Seconds from the present time"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "BigNumber"
									}
								}
							],
							"sources": [
								{
									"fileName": "api/OrderAPI.ts",
									"line": 88,
									"character": 36
								}
							]
						},
						{
							"id": 494,
							"name": "generateSalt",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 495,
									"name": "generateSalt",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Generates a 256-bit salt that can be included in an order, to ensure that the order generates\na unique orderHash and will not collide with other outstanding orders that are identical",
										"returns": "256-bit number that can be used as a salt\n"
									},
									"type": {
										"type": "reference",
										"name": "BigNumber"
									}
								}
							],
							"sources": [
								{
									"fileName": "api/OrderAPI.ts",
									"line": 77,
									"character": 21
								}
							]
						},
						{
							"id": 540,
							"name": "getOrderCancelledAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 541,
									"name": "getOrderCancelledAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Given an Issuance Order, gets the quantity of the Issuance Order cancelled",
										"returns": "Quantity of Issuance Order cancelled\n"
									},
									"parameters": [
										{
											"id": 542,
											"name": "issuanceOrder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Issuance Order"
											},
											"type": {
												"type": "reference",
												"name": "IssuanceOrder"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BigNumber"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/OrderAPI.ts",
									"line": 260,
									"character": 37
								}
							]
						},
						{
							"id": 537,
							"name": "getOrderFillsAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 538,
									"name": "getOrderFillsAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Given an Issuance Order, gets the quantity of the Issuance Order filled",
										"returns": "Quantity of Issuance Order filled\n"
									},
									"parameters": [
										{
											"id": 539,
											"name": "issuanceOrder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Issuance Order"
											},
											"type": {
												"type": "reference",
												"name": "IssuanceOrder"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BigNumber"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/OrderAPI.ts",
									"line": 248,
									"character": 33
								}
							]
						},
						{
							"id": 499,
							"name": "isValidSignatureOrThrowAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 500,
									"name": "isValidSignatureOrThrowAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Checks whether a signature produced for an issuance order is valid. A signature is valid only\nif the issuance order is signed by the maker. The function throws upon receiving an invalid signature",
										"returns": "Whether the recovered signature matches the data hash\n"
									},
									"parameters": [
										{
											"id": 501,
											"name": "issuanceOrder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Object conforming to the IssuanceOrder interface"
											},
											"type": {
												"type": "reference",
												"name": "IssuanceOrder"
											}
										},
										{
											"id": 502,
											"name": "signature",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Object conforming to ECSignature containing elliptic curve signature components"
											},
											"type": {
												"type": "reference",
												"name": "ECSig"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/OrderAPI.ts",
									"line": 100,
									"character": 43
								}
							]
						},
						{
							"id": 503,
							"name": "signOrderAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 504,
									"name": "signOrderAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Generates a ECSig from an IssuanceOrder objects. It signs the user using the signer in the transaction options.\nIf none is provided, it will assume, it will grab the first account from the provider",
										"returns": "Object conforming to ECSignature containing elliptic curve signature components\n"
									},
									"parameters": [
										{
											"id": 505,
											"name": "issuanceOrder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Issuance Order"
											},
											"type": {
												"type": "reference",
												"name": "IssuanceOrder"
											}
										},
										{
											"id": 506,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TxDataWithFrom",
												"id": 46
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ECSig"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/OrderAPI.ts",
									"line": 118,
									"character": 29
								}
							]
						},
						{
							"id": 507,
							"name": "validateOrderFillableOrThrowAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 508,
									"name": "validateOrderFillableOrThrowAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Validates an IssuanceOrder object's signature, expiration, and fill amount. Developers should call this method\nfrequently to prune order books and ensure the order has not already been filled or cancelled"
									},
									"parameters": [
										{
											"id": 509,
											"name": "signedIssuanceOrder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SignedIssuanceOrder"
											}
										},
										{
											"id": 510,
											"name": "fillQuantity",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Fill quantity to check if fillable\n"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/OrderAPI.ts",
									"line": 132,
									"character": 48
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								490
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								487,
								488,
								489,
								486
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								549,
								543,
								532,
								511,
								526,
								496,
								494,
								540,
								537,
								499,
								503,
								507
							]
						}
					],
					"sources": [
						{
							"fileName": "api/OrderAPI.ts",
							"line": 51,
							"character": 21
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						485
					]
				}
			],
			"sources": [
				{
					"fileName": "api/OrderAPI.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 554,
			"name": "\"api/SetTokenAPI\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/src/api/SetTokenAPI.ts",
			"children": [
				{
					"id": 555,
					"name": "SetTokenAPI",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "title",
								"text": "SetTokenAPI"
							},
							{
								"tag": "author",
								"text": "Set Protocol\n\nA library for interacting with SetToken contracts\n"
							}
						]
					},
					"children": [
						{
							"id": 559,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Instantiates a new SetTokenAPI instance that contains methods for interacting with SetToken contracts"
							},
							"signatures": [
								{
									"id": 560,
									"name": "new SetTokenAPI",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "Instantiates a new SetTokenAPI instance that contains methods for interacting with SetToken contracts"
									},
									"parameters": [
										{
											"id": 561,
											"name": "web3",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "Web3.js Provider instance you would like the SetProtocol.js library to use for interacting\n                  with the Ethereum network"
											},
											"type": {
												"type": "reference",
												"name": "Web3"
											},
											"defaultValue": " undefined"
										}
									],
									"type": {
										"type": "reference",
										"name": "SetTokenAPI",
										"id": 555
									}
								}
							],
							"sources": [
								{
									"fileName": "api/SetTokenAPI.ts",
									"line": 40,
									"character": 36
								}
							]
						},
						{
							"id": 557,
							"name": "assert",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "api/SetTokenAPI.ts",
									"line": 39,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "Assertions"
							}
						},
						{
							"id": 558,
							"name": "setToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "api/SetTokenAPI.ts",
									"line": 40,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "SetTokenWrapper",
								"id": 269
							}
						},
						{
							"id": 556,
							"name": "web3",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "api/SetTokenAPI.ts",
									"line": 38,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3"
							}
						},
						{
							"id": 578,
							"name": "assertIsMultipleOfNaturalUnitAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 579,
									"name": "assertIsMultipleOfNaturalUnitAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 580,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 581,
											"name": "quantity",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/SetTokenAPI.ts",
									"line": 122,
									"character": 50
								}
							]
						},
						{
							"id": 565,
							"name": "getComponentsAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 566,
									"name": "getComponentsAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetches the addresses of the component tokens that make up the Set",
										"returns": "An array of token addresses\n"
									},
									"parameters": [
										{
											"id": 567,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the Set"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/SetTokenAPI.ts",
									"line": 74,
									"character": 33
								}
							]
						},
						{
							"id": 562,
							"name": "getFactoryAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 563,
									"name": "getFactoryAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetches the address of the factory that created the Set",
										"returns": "Address of the factory that ceated the Set\n"
									},
									"parameters": [
										{
											"id": 564,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the Set"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Address"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/SetTokenAPI.ts",
									"line": 62,
									"character": 30
								}
							]
						},
						{
							"id": 568,
							"name": "getNaturalUnitAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 569,
									"name": "getNaturalUnitAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetches the natural unit of the Set",
										"returns": "Natural unit of the Set\n"
									},
									"parameters": [
										{
											"id": 570,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the Set"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BigNumber"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/SetTokenAPI.ts",
									"line": 86,
									"character": 34
								}
							]
						},
						{
							"id": 571,
							"name": "getUnitsAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 572,
									"name": "getUnitsAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetches units of each component token that make up the Set",
										"returns": "An array of units that make up the Set composition which correspond\n                        to the component tokens in the Set\n"
									},
									"parameters": [
										{
											"id": 573,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the Set"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "BigNumber"
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/SetTokenAPI.ts",
									"line": 99,
									"character": 28
								}
							]
						},
						{
							"id": 574,
							"name": "isMultipleOfNaturalUnitAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 575,
									"name": "isMultipleOfNaturalUnitAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Valiates whether the quantity passed in is a multiple of a Set's natural unit",
										"returns": "boolean       Boolean representing whether the Set is a multiple of the natural unit\n\n"
									},
									"parameters": [
										{
											"id": 576,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the Set"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 577,
											"name": "quantity",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Quantity to be checked"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/SetTokenAPI.ts",
									"line": 113,
									"character": 43
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								559
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								557,
								558,
								556
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								578,
								565,
								562,
								568,
								571,
								574
							]
						}
					],
					"sources": [
						{
							"fileName": "api/SetTokenAPI.ts",
							"line": 37,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						555
					]
				}
			],
			"sources": [
				{
					"fileName": "api/SetTokenAPI.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 582,
			"name": "\"api/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/src/api/index.ts",
			"sources": [
				{
					"fileName": "api/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 664,
			"name": "\"index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/src/index.ts",
			"sources": [
				{
					"fileName": "index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1,
			"name": "\"types/abi-decoder/index.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/src/types/abi-decoder/index.d.ts",
			"children": [
				{
					"id": 2,
					"name": "\"abi-decoder\"",
					"kind": 2,
					"kindString": "Module",
					"flags": {},
					"children": [
						{
							"id": 3,
							"name": "DecodedLog",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 6,
									"name": "address",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "types/abi-decoder/index.d.ts",
											"line": 7,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5,
									"name": "events",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "types/abi-decoder/index.d.ts",
											"line": 6,
											"character": 10
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "DecodedMethodParam",
											"id": 7
										}
									}
								},
								{
									"id": 4,
									"name": "name",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "types/abi-decoder/index.d.ts",
											"line": 5,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										6,
										5,
										4
									]
								}
							],
							"sources": [
								{
									"fileName": "types/abi-decoder/index.d.ts",
									"line": 4,
									"character": 29
								}
							]
						},
						{
							"id": 11,
							"name": "DecodedMethod",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 12,
									"name": "name",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "types/abi-decoder/index.d.ts",
											"line": 17,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 13,
									"name": "params",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "types/abi-decoder/index.d.ts",
											"line": 18,
											"character": 10
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "DecodedMethodParam",
											"id": 7
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										12,
										13
									]
								}
							],
							"sources": [
								{
									"fileName": "types/abi-decoder/index.d.ts",
									"line": 16,
									"character": 32
								}
							]
						},
						{
							"id": 7,
							"name": "DecodedMethodParam",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 8,
									"name": "name",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "types/abi-decoder/index.d.ts",
											"line": 11,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 10,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "types/abi-decoder/index.d.ts",
											"line": 13,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 9,
									"name": "value",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "types/abi-decoder/index.d.ts",
											"line": 12,
											"character": 9
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										8,
										10,
										9
									]
								}
							],
							"sources": [
								{
									"fileName": "types/abi-decoder/index.d.ts",
									"line": 10,
									"character": 37
								}
							]
						},
						{
							"id": 14,
							"name": "addABI",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 15,
									"name": "addABI",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 16,
											"name": "abi",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "types/abi-decoder/index.d.ts",
									"line": 21,
									"character": 24
								}
							]
						},
						{
							"id": 20,
							"name": "decodeLogs",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 21,
									"name": "decodeLogs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 22,
											"name": "logs",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "DecodedLog",
											"id": 3
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "types/abi-decoder/index.d.ts",
									"line": 23,
									"character": 28
								}
							]
						},
						{
							"id": 23,
							"name": "decodeMethod",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 24,
									"name": "decodeMethod",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 25,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "DecodedMethod",
										"id": 11
									}
								}
							],
							"sources": [
								{
									"fileName": "types/abi-decoder/index.d.ts",
									"line": 24,
									"character": 30
								}
							]
						},
						{
							"id": 17,
							"name": "removeABI",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 18,
									"name": "removeABI",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 19,
											"name": "abi",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "types/abi-decoder/index.d.ts",
									"line": 22,
									"character": 27
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"kind": 256,
							"children": [
								3,
								11,
								7
							]
						},
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								14,
								20,
								23,
								17
							]
						}
					],
					"sources": [
						{
							"fileName": "types/abi-decoder/index.d.ts",
							"line": 1,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "Modules",
					"kind": 2,
					"children": [
						2
					]
				}
			],
			"sources": [
				{
					"fileName": "types/abi-decoder/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 665,
			"name": "\"types/chai-bignumber/index.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/src/types/chai-bignumber/index.d.ts",
			"children": [
				{
					"id": 666,
					"name": "\"chai-bignumber\"",
					"kind": 2,
					"kindString": "Module",
					"flags": {},
					"children": [
						{
							"id": 667,
							"name": "chaiBignumber",
							"kind": 2,
							"kindString": "Module",
							"flags": {
								"isExported": true,
								"hasExportAssignment": true
							},
							"signatures": [
								{
									"id": 668,
									"name": "chaiBignumber",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 669,
											"name": "bignumber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 670,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 671,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 672,
															"name": "chai",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 673,
															"name": "utils",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "types/chai-bignumber/index.d.ts",
													"line": 4,
													"character": 41
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "types/chai-bignumber/index.d.ts",
									"line": 4,
									"character": 24
								},
								{
									"fileName": "types/chai-bignumber/index.d.ts",
									"line": 6,
									"character": 25
								}
							]
						}
					],
					"groups": [
						{
							"title": "Modules",
							"kind": 2,
							"children": [
								667
							]
						}
					],
					"sources": [
						{
							"fileName": "types/chai-bignumber/index.d.ts",
							"line": 3,
							"character": 31
						}
					]
				},
				{
					"id": 674,
					"name": "Chai",
					"kind": 2,
					"kindString": "Module",
					"flags": {},
					"children": [
						{
							"id": 675,
							"name": "Assertion",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"signatures": [
								{
									"id": 705,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 706,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 707,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Assertion"
									}
								}
							],
							"children": [
								{
									"id": 690,
									"name": "above",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 140,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"name": "NumberComparer"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericComparison.above"
									}
								},
								{
									"id": 683,
									"name": "and",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 130,
											"character": 11
										}
									],
									"type": {
										"type": "reference",
										"name": "Assertion"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "LanguageChains.and"
									}
								},
								{
									"id": 687,
									"name": "at",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 134,
											"character": 10
										}
									],
									"type": {
										"type": "reference",
										"name": "Assertion"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "LanguageChains.at"
									}
								},
								{
									"id": 678,
									"name": "be",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 125,
											"character": 10
										}
									],
									"type": {
										"type": "reference",
										"name": "Assertion"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "LanguageChains.be"
									}
								},
								{
									"id": 679,
									"name": "been",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 126,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"name": "Assertion"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "LanguageChains.been"
									}
								},
								{
									"id": 695,
									"name": "below",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 145,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"name": "NumberComparer"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericComparison.below"
									}
								},
								{
									"id": 676,
									"name": "bignumber",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/chai-bignumber/index.d.ts",
											"line": 16,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"name": "Assertion"
									}
								},
								{
									"id": 692,
									"name": "greaterThan",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 142,
											"character": 19
										}
									],
									"type": {
										"type": "reference",
										"name": "NumberComparer"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericComparison.greaterThan"
									}
								},
								{
									"id": 691,
									"name": "gt",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 141,
											"character": 10
										}
									],
									"type": {
										"type": "reference",
										"name": "NumberComparer"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericComparison.gt"
									}
								},
								{
									"id": 694,
									"name": "gte",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 144,
											"character": 11
										}
									],
									"type": {
										"type": "reference",
										"name": "NumberComparer"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericComparison.gte"
									}
								},
								{
									"id": 684,
									"name": "has",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 131,
											"character": 11
										}
									],
									"type": {
										"type": "reference",
										"name": "Assertion"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "LanguageChains.has"
									}
								},
								{
									"id": 685,
									"name": "have",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 132,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"name": "Assertion"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "LanguageChains.have"
									}
								},
								{
									"id": 709,
									"name": "instanceOf",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 160,
											"character": 18
										}
									],
									"type": {
										"type": "reference",
										"name": "InstanceOf"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "TypeComparison.instanceOf"
									}
								},
								{
									"id": 708,
									"name": "instanceof",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 159,
											"character": 18
										}
									],
									"type": {
										"type": "reference",
										"name": "InstanceOf"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "TypeComparison.instanceof"
									}
								},
								{
									"id": 680,
									"name": "is",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 127,
											"character": 10
										}
									],
									"type": {
										"type": "reference",
										"name": "Assertion"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "LanguageChains.is"
									}
								},
								{
									"id": 693,
									"name": "least",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 143,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"name": "NumberComparer"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericComparison.least"
									}
								},
								{
									"id": 697,
									"name": "lessThan",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 147,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"name": "NumberComparer"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericComparison.lessThan"
									}
								},
								{
									"id": 696,
									"name": "lt",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 146,
											"character": 10
										}
									],
									"type": {
										"type": "reference",
										"name": "NumberComparer"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericComparison.lt"
									}
								},
								{
									"id": 699,
									"name": "lte",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 149,
											"character": 11
										}
									],
									"type": {
										"type": "reference",
										"name": "NumberComparer"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericComparison.lte"
									}
								},
								{
									"id": 698,
									"name": "most",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 148,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"name": "NumberComparer"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericComparison.most"
									}
								},
								{
									"id": 688,
									"name": "of",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 135,
											"character": 10
										}
									],
									"type": {
										"type": "reference",
										"name": "Assertion"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "LanguageChains.of"
									}
								},
								{
									"id": 689,
									"name": "same",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 136,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"name": "Assertion"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "LanguageChains.same"
									}
								},
								{
									"id": 681,
									"name": "that",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 128,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"name": "Assertion"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "LanguageChains.that"
									}
								},
								{
									"id": 677,
									"name": "to",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 124,
											"character": 10
										}
									],
									"type": {
										"type": "reference",
										"name": "Assertion"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "LanguageChains.to"
									}
								},
								{
									"id": 682,
									"name": "which",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 129,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"name": "Assertion"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "LanguageChains.which"
									}
								},
								{
									"id": 686,
									"name": "with",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 133,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"name": "Assertion"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "LanguageChains.with"
									}
								},
								{
									"id": 700,
									"name": "within",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 701,
											"name": "within",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 702,
													"name": "start",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 703,
													"name": "finish",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 704,
													"name": "message",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Assertion"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "NumericComparison.within"
											}
										}
									],
									"sources": [
										{
											"fileName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 150,
											"character": 14
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericComparison.within"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										690,
										683,
										687,
										678,
										679,
										695,
										676,
										692,
										691,
										694,
										684,
										685,
										709,
										708,
										680,
										693,
										697,
										696,
										699,
										698,
										688,
										689,
										681,
										677,
										682,
										686
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										700
									]
								}
							],
							"sources": [
								{
									"fileName": "types/chai-bignumber/index.d.ts",
									"line": 15,
									"character": 21
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"name": "LanguageChains"
								},
								{
									"type": "reference",
									"name": "NumericComparison"
								},
								{
									"type": "reference",
									"name": "TypeComparison"
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"kind": 256,
							"children": [
								675
							]
						}
					],
					"sources": [
						{
							"fileName": "types/chai-bignumber/index.d.ts",
							"line": 13,
							"character": 22
						}
					]
				}
			],
			"groups": [
				{
					"title": "Modules",
					"kind": 2,
					"children": [
						666,
						674
					]
				}
			],
			"sources": [
				{
					"fileName": "types/chai-bignumber/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 26,
			"name": "\"types/common\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/src/types/common.ts",
			"children": [
				{
					"id": 27,
					"name": "Component",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 28,
							"name": "address",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 6,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Address"
							}
						},
						{
							"id": 29,
							"name": "unit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 7,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								28,
								29
							]
						}
					],
					"sources": [
						{
							"fileName": "types/common.ts",
							"line": 5,
							"character": 26
						}
					]
				},
				{
					"id": 57,
					"name": "CreateLogArgs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 60,
							"name": "_components",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 46,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Address"
								}
							}
						},
						{
							"id": 59,
							"name": "_factoryAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 45,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "Address"
							}
						},
						{
							"id": 63,
							"name": "_name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 49,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 62,
							"name": "_naturalUnit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 48,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						},
						{
							"id": 58,
							"name": "_setTokenAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 44,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "Address"
							}
						},
						{
							"id": 64,
							"name": "_symbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 50,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 61,
							"name": "_units",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 47,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "BigNumber"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								60,
								59,
								63,
								62,
								58,
								64,
								61
							]
						}
					],
					"sources": [
						{
							"fileName": "types/common.ts",
							"line": 43,
							"character": 30
						}
					]
				},
				{
					"id": 70,
					"name": "JSONRPCRequestPayload",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 73,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 64,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 74,
							"name": "jsonrpc",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 65,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 72,
							"name": "method",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 63,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 71,
							"name": "params",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 62,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								73,
								74,
								72,
								71
							]
						}
					],
					"sources": [
						{
							"fileName": "types/common.ts",
							"line": 61,
							"character": 38
						}
					]
				},
				{
					"id": 75,
					"name": "JSONRPCResponsePayload",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 77,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 70,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 78,
							"name": "jsonrpc",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 71,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 76,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 69,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								77,
								78,
								76
							]
						}
					],
					"sources": [
						{
							"fileName": "types/common.ts",
							"line": 68,
							"character": 39
						}
					]
				},
				{
					"id": 65,
					"name": "Provider",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Do not create your own provider. Use an existing provider from a Web3 or ProviderEngine library\nRead more about Providers in the 0x wiki."
					},
					"children": [
						{
							"id": 66,
							"name": "sendAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 67,
									"name": "sendAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 68,
											"name": "payload",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "JSONRPCRequestPayload",
												"id": 70
											}
										},
										{
											"id": 69,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "JSONRPCErrorCallback",
												"id": 79
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 58,
									"character": 13
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								66
							]
						}
					],
					"sources": [
						{
							"fileName": "types/common.ts",
							"line": 57,
							"character": 25
						}
					]
				},
				{
					"id": 30,
					"name": "SetComponent",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 31,
							"name": "address",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 11,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Address"
							}
						},
						{
							"id": 33,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 13,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32,
							"name": "quantity",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 12,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34,
							"name": "symbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 14,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								31,
								33,
								32,
								34
							]
						}
					],
					"sources": [
						{
							"fileName": "types/common.ts",
							"line": 10,
							"character": 29
						}
					]
				},
				{
					"id": 35,
					"name": "Token",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 36,
							"name": "address",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 18,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Address"
							}
						},
						{
							"id": 39,
							"name": "balance",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 21,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						},
						{
							"id": 40,
							"name": "decimals",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 22,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						},
						{
							"id": 37,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 19,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38,
							"name": "symbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 20,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								36,
								39,
								40,
								37,
								38
							]
						}
					],
					"sources": [
						{
							"fileName": "types/common.ts",
							"line": 17,
							"character": 22
						}
					]
				},
				{
					"id": 41,
					"name": "TxData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 42,
							"name": "from",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 26,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "Address"
							}
						},
						{
							"id": 43,
							"name": "gas",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 27,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "UInt"
							}
						},
						{
							"id": 44,
							"name": "gasPrice",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 28,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "UInt"
							}
						},
						{
							"id": 45,
							"name": "nonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 29,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								42,
								43,
								44,
								45
							]
						}
					],
					"sources": [
						{
							"fileName": "types/common.ts",
							"line": 25,
							"character": 23
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "TxDataPayable",
							"id": 51
						}
					]
				},
				{
					"id": 51,
					"name": "TxDataPayable",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 53,
							"name": "from",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 26,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "Address"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TxData.from",
								"id": 42
							}
						},
						{
							"id": 54,
							"name": "gas",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 27,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "UInt"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TxData.gas",
								"id": 43
							}
						},
						{
							"id": 55,
							"name": "gasPrice",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 28,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "UInt"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TxData.gasPrice",
								"id": 44
							}
						},
						{
							"id": 56,
							"name": "nonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 29,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TxData.nonce",
								"id": 45
							}
						},
						{
							"id": 52,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 40,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								53,
								54,
								55,
								56,
								52
							]
						}
					],
					"sources": [
						{
							"fileName": "types/common.ts",
							"line": 39,
							"character": 30
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "TxData",
							"id": 41
						}
					]
				},
				{
					"id": 46,
					"name": "TxDataWithFrom",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 47,
							"name": "from",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 33,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "Address"
							}
						},
						{
							"id": 48,
							"name": "gas",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 34,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "UInt"
							}
						},
						{
							"id": 49,
							"name": "gasPrice",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 35,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "UInt"
							}
						},
						{
							"id": 50,
							"name": "nonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 36,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								47,
								48,
								49,
								50
							]
						}
					],
					"sources": [
						{
							"fileName": "types/common.ts",
							"line": 32,
							"character": 31
						}
					]
				},
				{
					"id": 79,
					"name": "JSONRPCErrorCallback",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "types/common.ts",
							"line": 74,
							"character": 40
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 80,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 81,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 82,
											"name": "err",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Error"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										},
										{
											"id": 83,
											"name": "result",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "JSONRPCResponsePayload",
												"id": 75
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 74,
									"character": 42
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						27,
						57,
						70,
						75,
						65,
						30,
						35,
						41,
						51,
						46
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						79
					]
				}
			],
			"sources": [
				{
					"fileName": "types/common.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 84,
			"name": "\"types/tiny-promisify/index.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/src/types/tiny-promisify/index.d.ts",
			"children": [
				{
					"id": 85,
					"name": "\"tiny-promisify\"",
					"kind": 2,
					"kindString": "Module",
					"flags": {},
					"sources": [
						{
							"fileName": "types/tiny-promisify/index.d.ts",
							"line": 1,
							"character": 31
						}
					]
				}
			],
			"groups": [
				{
					"title": "Modules",
					"kind": 2,
					"children": [
						85
					]
				}
			],
			"sources": [
				{
					"fileName": "types/tiny-promisify/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 710,
			"name": "\"types/truffle-hdwallet-provider/index.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/src/types/truffle-hdwallet-provider/index.d.ts",
			"children": [
				{
					"id": 711,
					"name": "\"truffle-hdwallet-provider\"",
					"kind": 2,
					"kindString": "Module",
					"flags": {},
					"sources": [
						{
							"fileName": "types/truffle-hdwallet-provider/index.d.ts",
							"line": 1,
							"character": 42
						}
					]
				}
			],
			"groups": [
				{
					"title": "Modules",
					"kind": 2,
					"children": [
						711
					]
				}
			],
			"sources": [
				{
					"fileName": "types/truffle-hdwallet-provider/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 86,
			"name": "\"types/web3-utils/index.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/src/types/web3-utils/index.d.ts",
			"children": [
				{
					"id": 87,
					"name": "\"web3-utils\"",
					"kind": 2,
					"kindString": "Module",
					"flags": {},
					"sources": [
						{
							"fileName": "types/web3-utils/index.d.ts",
							"line": 1,
							"character": 27
						}
					]
				}
			],
			"groups": [
				{
					"title": "Modules",
					"kind": 2,
					"children": [
						87
					]
				}
			],
			"sources": [
				{
					"fileName": "types/web3-utils/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 88,
			"name": "\"wrappers/ContractWrapper\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/src/wrappers/ContractWrapper.ts",
			"children": [
				{
					"id": 89,
					"name": "ContractWrapper",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "title",
								"text": "ContractWrapper"
							},
							{
								"tag": "author",
								"text": "Set Protocol\n\nThe Contracts API handles all functions that load contracts\n\n"
							}
						]
					},
					"children": [
						{
							"id": 96,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 97,
									"name": "new ContractWrapper",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 98,
											"name": "web3",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Web3"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ContractWrapper",
										"id": 89
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/ContractWrapper.ts",
									"line": 41,
									"character": 58
								}
							]
						},
						{
							"id": 91,
							"name": "assert",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "wrappers/ContractWrapper.ts",
									"line": 40,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "Assertions"
							}
						},
						{
							"id": 92,
							"name": "cache",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "wrappers/ContractWrapper.ts",
									"line": 41,
									"character": 15
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 93,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 94,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 95,
												"name": "contractName",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "BaseContract"
										}
									},
									"sources": [
										{
											"fileName": "wrappers/ContractWrapper.ts",
											"line": 41,
											"character": 16
										}
									]
								}
							}
						},
						{
							"id": 90,
							"name": "web3",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "wrappers/ContractWrapper.ts",
									"line": 39,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3"
							}
						},
						{
							"id": 115,
							"name": "getCoreCacheKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 116,
									"name": "getCoreCacheKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a string used for accessing values in the core cache",
										"returns": "The cache key\n"
									},
									"parameters": [
										{
											"id": 117,
											"name": "coreAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the Core contract to use"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/ContractWrapper.ts",
									"line": 162,
									"character": 25
								}
							]
						},
						{
							"id": 121,
							"name": "getERC20TokenCacheKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 122,
									"name": "getERC20TokenCacheKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a string used for accessing values in the ERC20 token cache",
										"returns": "The cache key\n"
									},
									"parameters": [
										{
											"id": 123,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the ERC20 Token contract to use"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/ContractWrapper.ts",
									"line": 182,
									"character": 31
								}
							]
						},
						{
							"id": 118,
							"name": "getSetTokenCacheKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 119,
									"name": "getSetTokenCacheKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a string used for accessing values in the set token cache",
										"returns": "The cache key\n"
									},
									"parameters": [
										{
											"id": 120,
											"name": "setTokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the Set Token contract to use"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/ContractWrapper.ts",
									"line": 172,
									"character": 29
								}
							]
						},
						{
							"id": 124,
							"name": "getVaultCacheKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 125,
									"name": "getVaultCacheKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a string used for accessing values in the vault cache",
										"returns": "The cache key\n"
									},
									"parameters": [
										{
											"id": 126,
											"name": "vaultAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the Vault contract to use"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/ContractWrapper.ts",
									"line": 192,
									"character": 26
								}
							]
						},
						{
							"id": 99,
							"name": "loadCoreAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 100,
									"name": "loadCoreAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Load Core contract",
										"returns": "The Core Contract\n"
									},
									"parameters": [
										{
											"id": 101,
											"name": "coreAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the Core contract"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 102,
											"name": "transactionOptions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Options sent into the contract deployed method"
											},
											"type": {
												"type": "intrinsic",
												"name": "object"
											},
											"defaultValue": " {}"
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "CoreContract"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/ContractWrapper.ts",
									"line": 56,
									"character": 28
								}
							]
						},
						{
							"id": 107,
							"name": "loadERC20TokenAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 108,
									"name": "loadERC20TokenAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Load ERC20 Token contract",
										"returns": "The ERC20 Token Contract\n"
									},
									"parameters": [
										{
											"id": 109,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the ERC20 Token contract"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 110,
											"name": "transactionOptions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Options sent into the contract deployed method"
											},
											"type": {
												"type": "intrinsic",
												"name": "object"
											},
											"defaultValue": " {}"
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "DetailedERC20Contract"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/ContractWrapper.ts",
									"line": 112,
									"character": 34
								}
							]
						},
						{
							"id": 103,
							"name": "loadSetTokenAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 104,
									"name": "loadSetTokenAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Load Set Token contract",
										"returns": "The Set Token Contract\n"
									},
									"parameters": [
										{
											"id": 105,
											"name": "setTokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the Set Token contract"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 106,
											"name": "transactionOptions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Options sent into the contract deployed method"
											},
											"type": {
												"type": "intrinsic",
												"name": "object"
											},
											"defaultValue": " {}"
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SetTokenContract"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/ContractWrapper.ts",
									"line": 84,
									"character": 32
								}
							]
						},
						{
							"id": 111,
							"name": "loadVaultAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 112,
									"name": "loadVaultAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Load Vault contract",
										"returns": "The Vault Contract\n"
									},
									"parameters": [
										{
											"id": 113,
											"name": "vaultAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the Vault contract"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 114,
											"name": "transactionOptions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Options sent into the contract deployed method"
											},
											"type": {
												"type": "intrinsic",
												"name": "object"
											},
											"defaultValue": " {}"
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "VaultContract"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/ContractWrapper.ts",
									"line": 140,
									"character": 29
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								96
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								91,
								92,
								90
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								115,
								121,
								118,
								124,
								99,
								107,
								103,
								111
							]
						}
					],
					"sources": [
						{
							"fileName": "wrappers/ContractWrapper.ts",
							"line": 38,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						89
					]
				}
			],
			"sources": [
				{
					"fileName": "wrappers/ContractWrapper.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 127,
			"name": "\"wrappers/CoreWrapper\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/src/wrappers/CoreWrapper.ts",
			"children": [
				{
					"id": 128,
					"name": "CoreWrapper",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "title",
								"text": "CoreWrapper"
							},
							{
								"tag": "author",
								"text": "Set Protocol\n\nThe Core API handles all functions on the Core SetProtocol smart contract.\n\n"
							}
						]
					},
					"children": [
						{
							"id": 135,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 136,
									"name": "new CoreWrapper",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 137,
											"name": "web3",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Web3"
											}
										},
										{
											"id": 138,
											"name": "coreAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 139,
											"name": "transferProxyAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											},
											"defaultValue": " undefined"
										},
										{
											"id": 140,
											"name": "vaultAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											},
											"defaultValue": " undefined"
										}
									],
									"type": {
										"type": "reference",
										"name": "CoreWrapper",
										"id": 128
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 52,
									"character": 31
								}
							]
						},
						{
							"id": 130,
							"name": "contracts",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 47,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "ContractWrapper",
								"id": 89
							}
						},
						{
							"id": 132,
							"name": "coreAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 50,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "Address"
							}
						},
						{
							"id": 131,
							"name": "setProtocolUtils",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 48,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"name": "SetProtocolUtils"
							}
						},
						{
							"id": 133,
							"name": "transferProxyAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 51,
									"character": 29
								}
							],
							"type": {
								"type": "reference",
								"name": "Address"
							}
						},
						{
							"id": 134,
							"name": "vaultAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 52,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "Address"
							}
						},
						{
							"id": 129,
							"name": "web3",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 46,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3"
							}
						},
						{
							"id": 177,
							"name": "batchDeposit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 178,
									"name": "batchDeposit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Asynchronously batch deposits tokens to the vault",
										"returns": "A transaction hash\n"
									},
									"parameters": [
										{
											"id": 179,
											"name": "tokenAddresses",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Addresses of ERC20 tokens user wants to deposit into the vault"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										},
										{
											"id": 180,
											"name": "quantities",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "BigNumber"
												}
											}
										},
										{
											"id": 181,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The options for executing the transaction"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 41
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 222,
									"character": 27
								}
							]
						},
						{
							"id": 182,
							"name": "batchWithdraw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 183,
									"name": "batchWithdraw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Asynchronously batch withdraws tokens from the vault",
										"returns": "A transaction hash\n"
									},
									"parameters": [
										{
											"id": 184,
											"name": "tokenAddresses",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Addresses of ERC20 tokens user wants to withdraw from the vault"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										},
										{
											"id": 185,
											"name": "quantities",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "BigNumber"
												}
											}
										},
										{
											"id": 186,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The options for executing the transaction"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 41
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 241,
									"character": 28
								}
							]
						},
						{
							"id": 193,
							"name": "cancelOrder",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 194,
									"name": "cancelOrder",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Cancels an Issuance Order",
										"returns": "A transaction hash\n"
									},
									"parameters": [
										{
											"id": 195,
											"name": "issuanceOrder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Issuance order to cancel"
											},
											"type": {
												"type": "reference",
												"name": "IssuanceOrder"
											}
										},
										{
											"id": 196,
											"name": "cancelAmount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Number of Set to cancel in this call"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 197,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The options for executing the transaction"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 41
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 309,
									"character": 26
								}
							]
						},
						{
							"id": 141,
							"name": "create",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 142,
									"name": "create",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a new Set, specifying the components, units, name, symbol to use.",
										"returns": "A transaction hash to then later look up for the Set address\n"
									},
									"parameters": [
										{
											"id": 143,
											"name": "factoryAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Set Token factory address of the token being created"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 144,
											"name": "components",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Component token addresses"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										},
										{
											"id": 145,
											"name": "units",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Units of corresponding token components"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "BigNumber"
												}
											}
										},
										{
											"id": 146,
											"name": "naturalUnit",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Supplied as the lowest common denominator for the Set"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 147,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "User-supplied name for Set (i.e. \"DEX Set\")"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 148,
											"name": "symbol",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "User-supplied symbol for Set (i.e. \"DEX\")"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 149,
											"name": "callData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Additional call data used to create different Sets"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 150,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The options for executing the transaction"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 41
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 82,
									"character": 21
								}
							]
						},
						{
							"id": 167,
							"name": "deposit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 168,
									"name": "deposit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Asynchronously deposits tokens to the vault",
										"returns": "A transaction hash\n"
									},
									"parameters": [
										{
											"id": 169,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the ERC20 token"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 170,
											"name": "quantity",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Number of tokens a user wants to deposit into the vault"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 171,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The options for executing the transaction"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 41
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 184,
									"character": 22
								}
							]
						},
						{
							"id": 187,
							"name": "fillOrder",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 188,
									"name": "fillOrder",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fills an Issuance Order",
										"returns": "A transaction hash\n"
									},
									"parameters": [
										{
											"id": 189,
											"name": "signedIssuanceOrder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Signed issuance order to fill"
											},
											"type": {
												"type": "reference",
												"name": "SignedIssuanceOrder"
											}
										},
										{
											"id": 190,
											"name": "fillAmount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Number of Set to fill in this call"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 191,
											"name": "orderData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Bytes representation of orders used to fill issuance order"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 192,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The options for executing the transaction"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 41
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 262,
									"character": 24
								}
							]
						},
						{
							"id": 198,
							"name": "getExchangeAddress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 199,
									"name": "getExchangeAddress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Asynchronously gets the exchange address for a given exhange id",
										"returns": "An exchange address\n"
									},
									"parameters": [
										{
											"id": 200,
											"name": "exchangeId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Enum id of the exchange"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Address"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 345,
									"character": 33
								}
							]
						},
						{
							"id": 205,
							"name": "getFactories",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 206,
									"name": "getFactories",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Asynchronously gets factory addresses",
										"returns": "Array of factory addresses\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 381,
									"character": 27
								}
							]
						},
						{
							"id": 207,
							"name": "getSetAddresses",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 208,
									"name": "getSetAddresses",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetch the addresses of SetTokens and RebalancingSetTokens created by the system\nof contracts specified in SetProtcolConfig",
										"returns": "Array of SetToken and RebalancingSetToken addresses\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 394,
									"character": 30
								}
							]
						},
						{
							"id": 201,
							"name": "getTransferProxyAddress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 202,
									"name": "getTransferProxyAddress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Asynchronously gets the transfer proxy address",
										"returns": "Transfer proxy address\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Address"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 357,
									"character": 38
								}
							]
						},
						{
							"id": 203,
							"name": "getVaultAddress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 204,
									"name": "getVaultAddress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Asynchronously gets the vault address",
										"returns": "Vault address\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Address"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 369,
									"character": 30
								}
							]
						},
						{
							"id": 151,
							"name": "issue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 152,
									"name": "issue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Asynchronously issues a particular quantity of tokens from a particular Sets",
										"returns": "A transaction hash to then later look up\n"
									},
									"parameters": [
										{
											"id": 153,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Set token address of Set being issued"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 154,
											"name": "quantity",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Number of Sets a user wants to issue in Wei"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 155,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The options for executing the transaction"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 41
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 115,
									"character": 20
								}
							]
						},
						{
							"id": 218,
							"name": "orderCancels",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 219,
									"name": "orderCancels",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Asynchronously gets the quantity of the Issuance Order cancelled",
										"returns": "Quantity of Issuance Order cancelled\n"
									},
									"parameters": [
										{
											"id": 220,
											"name": "orderHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Bytes32 hash of the Issuance Order"
											},
											"type": {
												"type": "reference",
												"name": "Bytes"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BigNumber"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 447,
									"character": 27
								}
							]
						},
						{
							"id": 215,
							"name": "orderFills",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 216,
									"name": "orderFills",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Asynchronously gets the quantity of the Issuance Order filled",
										"returns": "Quantity of Issuance Order filled\n"
									},
									"parameters": [
										{
											"id": 217,
											"name": "orderHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Bytes32 hash of the issuance order"
											},
											"type": {
												"type": "reference",
												"name": "Bytes"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BigNumber"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 434,
									"character": 25
								}
							]
						},
						{
							"id": 156,
							"name": "redeem",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 157,
									"name": "redeem",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Asynchronously redeems a particular quantity of tokens from a particular Sets",
										"returns": "A transaction hash to then later look up\n"
									},
									"parameters": [
										{
											"id": 158,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Set token address of Set being issued"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 159,
											"name": "quantity",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Number of Sets a user wants to redeem in Wei"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 160,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The options for executing the transaction"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 41
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 134,
									"character": 21
								}
							]
						},
						{
							"id": 161,
							"name": "redeemAndWithdraw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 162,
									"name": "redeemAndWithdraw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Redeem and withdraw with a single transaction",
										"text": "Normally, you should expect to be able to withdraw all of the tokens.\nHowever, some have central abilities to freeze transfers (e.g. EOS). The parameter toExclude\nallows you to optionally specify which component tokens to remain under the user's\naddress in the vault. The rest will be transferred to the user.\n",
										"returns": "A transaction hash to then later look up\n"
									},
									"parameters": [
										{
											"id": 163,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The address of the Set token"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 164,
											"name": "quantity",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The number of tokens to redeem"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 165,
											"name": "toExclude",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Bitmask of component indexes to exclude from withdrawal"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 166,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The options for executing the transaction"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 41
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 159,
									"character": 32
								}
							]
						},
						{
							"id": 209,
							"name": "validFactories",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 210,
									"name": "validFactories",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Verifies that the provided SetToken factory is enabled for creating a new SetToken",
										"returns": "Whether the factory contract is enabled\n"
									},
									"parameters": [
										{
											"id": 211,
											"name": "factoryAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the factory contract"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 407,
									"character": 29
								}
							]
						},
						{
							"id": 212,
							"name": "validSets",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 213,
									"name": "validSets",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Verifies that the provided SetToken or RebalancingSetToken address is enabled\nfor issuance and redemption",
										"returns": "Whether the contract is enabled\n"
									},
									"parameters": [
										{
											"id": 214,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the SetToken or RebalancingSetToken contract"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 421,
									"character": 24
								}
							]
						},
						{
							"id": 172,
							"name": "withdraw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 173,
									"name": "withdraw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Asynchronously withdraw tokens from the vault",
										"returns": "A transaction hash\n"
									},
									"parameters": [
										{
											"id": 174,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the ERC20 token"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 175,
											"name": "quantity",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Number of tokens a user wants to withdraw from the vault"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 176,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The options for executing the transaction"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 41
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 203,
									"character": 23
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								135
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								130,
								132,
								131,
								133,
								134,
								129
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								177,
								182,
								193,
								141,
								167,
								187,
								198,
								205,
								207,
								201,
								203,
								151,
								218,
								215,
								156,
								161,
								209,
								212,
								172
							]
						}
					],
					"sources": [
						{
							"fileName": "wrappers/CoreWrapper.ts",
							"line": 45,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						128
					]
				}
			],
			"sources": [
				{
					"fileName": "wrappers/CoreWrapper.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 221,
			"name": "\"wrappers/ERC20Wrapper\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/src/wrappers/ERC20Wrapper.ts",
			"children": [
				{
					"id": 222,
					"name": "ERC20Wrapper",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "title",
								"text": "VaultAPI"
							},
							{
								"tag": "author",
								"text": "Set Protocol\n\nThe Vault API handles all functions on the Vault smart contract.\n\n"
							}
						]
					},
					"children": [
						{
							"id": 225,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 226,
									"name": "new ERC20Wrapper",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 227,
											"name": "web3",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Web3"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ERC20Wrapper",
										"id": 222
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/ERC20Wrapper.ts",
									"line": 35,
									"character": 37
								}
							]
						},
						{
							"id": 224,
							"name": "contracts",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "wrappers/ERC20Wrapper.ts",
									"line": 35,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "ContractWrapper",
								"id": 89
							}
						},
						{
							"id": 223,
							"name": "web3",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "wrappers/ERC20Wrapper.ts",
									"line": 34,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3"
							}
						},
						{
							"id": 244,
							"name": "allowance",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 245,
									"name": "allowance",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets the allowance of the spender by the owner account",
										"returns": "The allowance of the spender\n"
									},
									"parameters": [
										{
											"id": 246,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the token"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 247,
											"name": "ownerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the owner"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 248,
											"name": "spenderAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the spender"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BigNumber"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/ERC20Wrapper.ts",
									"line": 112,
									"character": 24
								}
							]
						},
						{
							"id": 262,
							"name": "approve",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 263,
									"name": "approve",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Asynchronously approves the value amount of the spender from the owner",
										"returns": "the hash of the resulting transaction.\n"
									},
									"parameters": [
										{
											"id": 264,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the address of the token being used."
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 265,
											"name": "spenderAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the spender."
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 266,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the amount to be approved."
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 267,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "any parameters necessary to modify the transaction."
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 41
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/ERC20Wrapper.ts",
									"line": 169,
									"character": 22
								}
							]
						},
						{
							"id": 228,
							"name": "balanceOf",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 229,
									"name": "balanceOf",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets balance of the ERC20 token",
										"returns": "The balance of the ERC20 token\n"
									},
									"parameters": [
										{
											"id": 230,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the ERC20 token"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 231,
											"name": "userAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the user"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BigNumber"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/ERC20Wrapper.ts",
									"line": 49,
									"character": 24
								}
							]
						},
						{
							"id": 241,
							"name": "decimals",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 242,
									"name": "decimals",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets decimals of the ERC20 token",
										"returns": "The decimals of the ERC20 token\n"
									},
									"parameters": [
										{
											"id": 243,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the ERC20 token"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BigNumber"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/ERC20Wrapper.ts",
									"line": 98,
									"character": 23
								}
							]
						},
						{
							"id": 232,
							"name": "name",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 233,
									"name": "name",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets name of the ERC20 token",
										"returns": "The name of the ERC20 token\n"
									},
									"parameters": [
										{
											"id": 234,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the ERC20 token"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/ERC20Wrapper.ts",
									"line": 61,
									"character": 19
								}
							]
						},
						{
							"id": 235,
							"name": "symbol",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 236,
									"name": "symbol",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets balance of the ERC20 token",
										"returns": "The symbol of the ERC20 token\n"
									},
									"parameters": [
										{
											"id": 237,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the ERC20 token"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/ERC20Wrapper.ts",
									"line": 73,
									"character": 21
								}
							]
						},
						{
							"id": 238,
							"name": "totalSupply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 239,
									"name": "totalSupply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets the total supply of the ERC20 token",
										"returns": "The symbol of the ERC20 token\n"
									},
									"parameters": [
										{
											"id": 240,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the ERC20 token"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BigNumber"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/ERC20Wrapper.ts",
									"line": 85,
									"character": 26
								}
							]
						},
						{
							"id": 249,
							"name": "transfer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 250,
									"name": "transfer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Asynchronously transfer value denominated in the specified ERC20 token to\nthe address specified.",
										"returns": "The hash of the resulting transaction.\n"
									},
									"parameters": [
										{
											"id": 251,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The address of the token being used."
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 252,
											"name": "to",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "To whom the transfer is being made."
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 253,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The amount being transferred."
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 254,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Any parameters necessary to modify the transaction."
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 41
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/ERC20Wrapper.ts",
									"line": 128,
									"character": 23
								}
							]
						},
						{
							"id": 255,
							"name": "transferFrom",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 256,
									"name": "transferFrom",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Asynchronously transfer the value amount in the token specified so long\nas the sender of the message has received sufficient allowance on behalf\nof `from` to do so.",
										"returns": "The hash of the resulting transaction.\n"
									},
									"parameters": [
										{
											"id": 257,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The address of the token being used."
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 258,
											"name": "from",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "From whom are the funds being transferred."
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 259,
											"name": "to",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "To whom are the funds being transferred."
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 260,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The amount to be transferred."
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 261,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Any parameters necessary to modify the transaction."
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 41
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/ERC20Wrapper.ts",
									"line": 147,
									"character": 27
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								225
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								224,
								223
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								244,
								262,
								228,
								241,
								232,
								235,
								238,
								249,
								255
							]
						}
					],
					"sources": [
						{
							"fileName": "wrappers/ERC20Wrapper.ts",
							"line": 33,
							"character": 25
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						222
					]
				}
			],
			"sources": [
				{
					"fileName": "wrappers/ERC20Wrapper.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 268,
			"name": "\"wrappers/SetTokenWrapper\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/src/wrappers/SetTokenWrapper.ts",
			"children": [
				{
					"id": 269,
					"name": "SetTokenWrapper",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "title",
								"text": "SetTokenWrapper"
							},
							{
								"tag": "author",
								"text": "Set Protocol\n\nThe Set Token API handles all functions on the Set Token smart contract.\n\n"
							}
						]
					},
					"children": [
						{
							"id": 272,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 273,
									"name": "new SetTokenWrapper",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 274,
											"name": "web3",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Web3"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "SetTokenWrapper",
										"id": 269
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/SetTokenWrapper.ts",
									"line": 36,
									"character": 37
								}
							]
						},
						{
							"id": 271,
							"name": "contracts",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "wrappers/SetTokenWrapper.ts",
									"line": 36,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "ContractWrapper",
								"id": 89
							}
						},
						{
							"id": 270,
							"name": "web3",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "wrappers/SetTokenWrapper.ts",
									"line": 35,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3"
							}
						},
						{
							"id": 275,
							"name": "factory",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 276,
									"name": "factory",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets the Set's origin factory",
										"returns": "The factory address\n"
									},
									"parameters": [
										{
											"id": 277,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the Set"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Address"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/SetTokenWrapper.ts",
									"line": 49,
									"character": 22
								}
							]
						},
						{
							"id": 278,
							"name": "getComponents",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 279,
									"name": "getComponents",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets component tokens that make up the Set",
										"returns": "An array of addresses\n"
									},
									"parameters": [
										{
											"id": 280,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the Set"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/SetTokenWrapper.ts",
									"line": 61,
									"character": 28
								}
							]
						},
						{
							"id": 284,
							"name": "getUnits",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 285,
									"name": "getUnits",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets units of each component token that make up the Set",
										"returns": "An array of units that make up the Set composition which\n                   correspond to the component tokens in the Set\n"
									},
									"parameters": [
										{
											"id": 286,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the Set"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "BigNumber"
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/SetTokenWrapper.ts",
									"line": 86,
									"character": 23
								}
							]
						},
						{
							"id": 281,
							"name": "naturalUnit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 282,
									"name": "naturalUnit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets natural unit of the Set",
										"returns": "The natural unit of the Set\n"
									},
									"parameters": [
										{
											"id": 283,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the Set"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BigNumber"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/SetTokenWrapper.ts",
									"line": 73,
									"character": 26
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								272
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								271,
								270
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								275,
								278,
								284,
								281
							]
						}
					],
					"sources": [
						{
							"fileName": "wrappers/SetTokenWrapper.ts",
							"line": 34,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						269
					]
				}
			],
			"sources": [
				{
					"fileName": "wrappers/SetTokenWrapper.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 287,
			"name": "\"wrappers/VaultWrapper\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/src/wrappers/VaultWrapper.ts",
			"children": [
				{
					"id": 288,
					"name": "VaultWrapper",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "title",
								"text": "VaultWrapper"
							},
							{
								"tag": "author",
								"text": "Set Protocol\n\nThe Vault API handles all functions on the Vault smart contract.\n\n"
							}
						]
					},
					"children": [
						{
							"id": 293,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 294,
									"name": "new VaultWrapper",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 295,
											"name": "web3",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Web3"
											}
										},
										{
											"id": 296,
											"name": "vaultAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "VaultWrapper",
										"id": 288
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/VaultWrapper.ts",
									"line": 37,
									"character": 32
								}
							]
						},
						{
							"id": 290,
							"name": "assert",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "wrappers/VaultWrapper.ts",
									"line": 35,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "Assertions"
							}
						},
						{
							"id": 291,
							"name": "contracts",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "wrappers/VaultWrapper.ts",
									"line": 36,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "ContractWrapper",
								"id": 89
							}
						},
						{
							"id": 292,
							"name": "vaultAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "wrappers/VaultWrapper.ts",
									"line": 37,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"name": "Address"
							}
						},
						{
							"id": 289,
							"name": "web3",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "wrappers/VaultWrapper.ts",
									"line": 34,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3"
							}
						},
						{
							"id": 297,
							"name": "getBalanceInVault",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 298,
									"name": "getBalanceInVault",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetch the balance of the provided contract address inside the vault specified\nin SetProtocolConfig",
										"returns": "The balance of the user's Set\n"
									},
									"parameters": [
										{
											"id": 299,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the contract (typically SetToken or ERC20)"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 300,
											"name": "ownerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the user"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BigNumber"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/VaultWrapper.ts",
									"line": 54,
									"character": 32
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								293
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								290,
								291,
								292,
								289
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								297
							]
						}
					],
					"sources": [
						{
							"fileName": "wrappers/VaultWrapper.ts",
							"line": 33,
							"character": 25
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						288
					]
				}
			],
			"sources": [
				{
					"fileName": "wrappers/VaultWrapper.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 301,
			"name": "\"wrappers/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/alexsoong/Source/set-protocol/setProtocol.js/src/wrappers/index.ts",
			"sources": [
				{
					"fileName": "wrappers/index.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "External modules",
			"kind": 1,
			"children": [
				583,
				302,
				331,
				350,
				420,
				451,
				484,
				554,
				582,
				664,
				1,
				665,
				26,
				84,
				710,
				86,
				88,
				127,
				221,
				268,
				287,
				301
			]
		}
	]
}